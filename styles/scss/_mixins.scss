// CONTAINER WIDTH
@mixin container($maxWidth: $container-max-width) {
    max-width: $maxWidth;
    margin: 0 auto;
}

@mixin containerFull() {
    width: 100%;
}

// BROWSERS
@mixin setBrowsers($attr, $value, $browsers: $browsers-default) {
    #{$attr}: #{$value};

    @each $browser in $browsers {
        -#{$browser}-#{$attr}: #{$value};
    }
}

// BORDER RADIUS
@mixin borderRadius($radius: $radius-default) {
    @include setBrowsers(border-radius, $radius);
}

@mixin rounded() {
    @include borderRadius(50%);
}

// FLEXBOX
@mixin flex($justifyContent: center, $alignitems: center, $flexWrap: wrap) {
    display: flex;
    justify-content: $justifyContent;
    align-items: $alignitems;
    flex-wrap: $flexWrap;
}

@mixin flexBasis($basis, $gap: 0) {
    @if $gap != 0 {
        flex-basis: calc($basis - $gap);
    }

    @else {
        flex-basis: $basis;
    }
}

@mixin flex1($gap: 0) {
    @include flexBasis(100%, $gap);
}

@mixin flex2($gap: 0) {
    @include flexBasis(50%, $gap);
}

@mixin flex4($gap: 0) {
    @include flexBasis(25%, $gap);
}

// POSITION
// Relative
@mixin relative() {
    position: relative;
}

// Absolute
@mixin absolute($top: 0, $left: 0) {
    position: absolute;
    top: $top;
    left: $left;
}

// BOX SHADOW
@mixin boxShadow($xOffset: 0, $yOffset: 0, $blur: 0, $spread: 0, $color: $color-shadow) {
    box-shadow: $xOffset $yOffset $blur $spread $color;
}

// TRANSITION
@mixin transition($property: all, $duration: 0.3s, $timingFunction: ease, $delay: 0s) {
    transition: $property $duration $timingFunction $delay;
}

// DROP DOWN
@mixin dropDown() {
    display: none;
    width: 400px;
    background-color: $color-white;
    padding: 20px;

    @include absolute(100%);
    @include borderRadius;
    @include boxShadow(0, 10px, 50px);
    @include transition;
}

// BUTTON
@mixin btn() {
    display: inline-block;
    background-color: $color-orange;
    color: $color-white;
    border: none;
    text-align: center;
    font-weight: 700;
    padding: 20px 46px;

    @include borderRadius;
}